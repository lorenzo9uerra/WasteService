/* Generated by AN DISI Unibo */ 
package it.unibo.led_gui

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Led_gui ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "wait"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("wait") { //this:State
					action { //it:State
						delay(1500) 
					}
					 transition( edgeName="goto",targetState="randomStatus", cond=doswitch() )
				}	 
				state("randomStatus") { //this:State
					action { //it:State
						
									var Status = ""
						
									var r = kotlin.random.Random.nextFloat() 
									if (r < 0.33) {
										Status = "off"
									} else if (r < 0.66) {
										Status = "on"
									} else {
										Status = "blinking"
									}
						updateResourceRep( Status  
						)
					}
					 transition( edgeName="goto",targetState="wait", cond=doswitch() )
				}	 
			}
		}
}
