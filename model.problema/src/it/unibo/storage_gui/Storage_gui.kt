/* Generated by AN DISI Unibo */ 
package it.unibo.storage_gui

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Storage_gui ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "wait"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("wait") { //this:State
					action { //it:State
						delay(3000) 
					}
					 transition( edgeName="goto",targetState="randomStorage", cond=doswitch() )
				}	 
				state("randomStorage") { //this:State
					action { //it:State
						updateResourceRep( "${kotlin.random.Random.nextInt(30)},${kotlin.random.Random.nextInt(30)}"  
						)
					}
					 transition( edgeName="goto",targetState="wait", cond=doswitch() )
				}	 
			}
		}
}
